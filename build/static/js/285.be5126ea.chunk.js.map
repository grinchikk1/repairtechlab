{"version":3,"file":"static/js/285.be5126ea.chunk.js","mappings":"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","sources":["components/CustomSnackBar.jsx","pages/Register.jsx","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Snackbar, Alert, AlertTitle } from \"@mui/material\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nfunction CustomSnackbar({ open, onClose, text, titleText, severity }) {\n    const customIconMapping = {\n        success: <CheckCircleIcon fontSize=\"inherit\" />,\n        error: <ErrorIcon fontSize=\"inherit\" />,\n        info: <InfoIcon fontSize=\"inherit\" />,\n    };\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            open={open}\n            autoHideDuration={3000}\n            onClose={onClose}\n        >\n            <Alert\n                onClose={onClose}\n                severity={severity}\n                iconMapping={customIconMapping}\n            >\n                <AlertTitle>{titleText}</AlertTitle>\n                {text}\n            </Alert>\n        </Snackbar>\n    );\n}\n\nCustomSnackbar.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    text: PropTypes.string.isRequired,\n    titleText: PropTypes.string.isRequired,\n    severity: PropTypes.string.isRequired,\n};\n\nexport default CustomSnackbar;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, NavLink } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport {\n    Box,\n    Typography,\n    TextField,\n    Button,\n    IconButton,\n    styled,\n} from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport { Context } from \"../context/AuthContext\";\nimport { auth } from \"../firebaseConfig\";\nimport CustomSnackbar from \"../components/CustomSnackBar\";\nimport { registerUser } from \"../redux/slice/userSlice\";\n\nconst validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"Поле обовʼязкове\"),\n    email: Yup.string()\n        .email(\"Не вірний формат пошти\")\n        .required(\"Поле обовʼязкове\"),\n    password: Yup.string()\n        .min(7, \"Пароль має містити від 7 до 30 символів\")\n        .max(30, \"Пароль має містити від 7 до 30 символів\")\n        .required(\"Поле обовʼязкове\"),\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref(\"password\"), null], \"Паролі не співпадають\")\n        .required(\"Поле обов'язкове\"),\n});\n\nconst StyledLink = styled(NavLink)({\n    textDecoration: \"none\",\n    color: \"rgb(41, 98, 255)\",\n    marginLeft: \"10px\",\n    borderBottom: \"1px solid rgba(41, 98, 255, 0.2)\",\n    \"&:hover\": {\n        borderColor: \"rgb(41, 98, 255)\",\n    },\n    \"&.active\": {\n        borderColor: \"rgb(41, 98, 255)\",\n    },\n});\n\nexport default function Register() {\n    const [titleText, setTitleText] = useState(\"\");\n    const [text, setText] = useState(\"\");\n    const [severity, setSeverity] = useState(\"success\");\n\n    const [showSnackBar, setShowSnackBar] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n    const { user } = useContext(Context);\n    const dispatch = useDispatch();\n\n    const navigate = useNavigate();\n\n    const formik = useFormik({\n        initialValues: {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        },\n        validationSchema,\n        onSubmit: async (values, { resetForm }) => {\n            try {\n                const response = await createUserWithEmailAndPassword(\n                    auth,\n                    values.email,\n                    values.password\n                );\n\n                const data = {\n                    email: response.user.email,\n                    uid: response.user.uid,\n                    name: values.username,\n                };\n\n                dispatch(registerUser(data));\n\n                setTitleText(\"Вітаємо\");\n                setText(\"Успішна реєстрація\");\n                setSeverity(\"success\");\n                setShowSnackBar(true);\n\n                setTimeout(() => {\n                    navigate(\"/\");\n                }, 2000);\n            } catch (error) {\n                setTitleText(\"Помилка\");\n                setText(\"Ім'я користувача, пошта або пароль не вірний\");\n                setSeverity(\"error\");\n                setShowSnackBar(true);\n            }\n\n            resetForm();\n        },\n    });\n\n    useEffect(() => {\n        if (user) {\n            navigate(\"/profile\");\n        }\n    }, []);\n\n    return (\n        <Box\n            component=\"form\"\n            onSubmit={formik.handleSubmit}\n            sx={{\n                margin: \"0 auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignContent: \"center\",\n                justifyContent: \"space-evenly\",\n                pl: 4,\n                pr: 4,\n                pt: 10,\n                pb: 4,\n                maxWidth: \"480px\",\n            }}\n        >\n            <Typography variant=\"h4\" color=\"secondary\" fontWeight=\"bold\">\n                Реєстрація\n            </Typography>\n            <Typography variant=\"h6\" color=\"primary\" sx={{ pt: 3, pb: 1 }}>\n                Вкажіть Імʼя\n            </Typography>\n            <TextField\n                type=\"text\"\n                variant=\"outlined\"\n                name=\"username\"\n                value={formik.values.username}\n                autoComplete=\"given-name\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                    (formik.touched.username || formik.submitCount > 0) &&\n                    Boolean(formik.errors.username)\n                }\n                helperText={\n                    formik.touched.username || formik.submitCount > 0\n                        ? formik.errors.username || \"\\u200b\"\n                        : \" \"\n                }\n            />\n            <Typography variant=\"h6\" color=\"primary\" sx={{ pt: 3, pb: 1 }}>\n                Вкажіть Пошту\n            </Typography>\n            <TextField\n                type=\"email\"\n                variant=\"outlined\"\n                name=\"email\"\n                value={formik.values.email}\n                autoComplete=\"email\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                    (formik.touched.email || formik.submitCount > 0) &&\n                    Boolean(formik.errors.email)\n                }\n                helperText={\n                    formik.touched.email || formik.submitCount > 0\n                        ? formik.errors.email || \"\\u200b\"\n                        : \" \"\n                }\n            />\n            <Typography variant=\"h6\" color=\"primary\" sx={{ pt: 3, pb: 1 }}>\n                Придумайте пароль\n            </Typography>\n            <TextField\n                type={showPassword ? \"text\" : \"password\"}\n                variant=\"outlined\"\n                name=\"password\"\n                value={formik.values.password}\n                autoComplete=\"current-password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                    (formik.touched.password || formik.submitCount > 0) &&\n                    Boolean(formik.errors.password)\n                }\n                helperText={\n                    formik.touched.password || formik.submitCount > 0\n                        ? formik.errors.password || \"\\u200b\"\n                        : \" \"\n                }\n                InputProps={{\n                    endAdornment: React.cloneElement(\n                        <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={() => setShowPassword(!showPassword)}\n                        >\n                            {showPassword ? (\n                                <VisibilityIcon color=\"secondary\" />\n                            ) : (\n                                <VisibilityOffIcon color=\"secondary\" />\n                            )}\n                        </IconButton>\n                    ),\n                }}\n            />\n            <Typography variant=\"h6\" color=\"primary\" sx={{ pt: 3, pb: 1 }}>\n                Підтвердіть пароль\n            </Typography>\n            <TextField\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                variant=\"outlined\"\n                name=\"confirmPassword\"\n                value={formik.values.confirmPassword}\n                autoComplete=\"new-password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                    (formik.touched.confirmPassword ||\n                        formik.submitCount > 0) &&\n                    Boolean(formik.errors.confirmPassword)\n                }\n                helperText={\n                    formik.touched.confirmPassword || formik.submitCount > 0\n                        ? formik.errors.confirmPassword || \"\\u200b\"\n                        : \" \"\n                }\n                InputProps={{\n                    endAdornment: React.cloneElement(\n                        <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={() =>\n                                setShowConfirmPassword(!showConfirmPassword)\n                            }\n                        >\n                            {showConfirmPassword ? (\n                                <VisibilityIcon color=\"secondary\" />\n                            ) : (\n                                <VisibilityOffIcon color=\"secondary\" />\n                            )}\n                        </IconButton>\n                    ),\n                }}\n            />\n            <Button variant=\"outlined\" type=\"submit\" sx={{ mt: 4, mb: 4 }}>\n                Зареєструватися\n            </Button>\n            <Typography\n                variant=\"body1\"\n                fontSize={20}\n                sx={{ textAlign: \"center\" }}\n            >\n                Вже маєте акаунт? <StyledLink to=\"/login\">Увійти</StyledLink>\n            </Typography>\n            <CustomSnackbar\n                open={showSnackBar}\n                onClose={() => setShowSnackBar(false)}\n                titleText={titleText}\n                text={text}\n                severity={severity}\n            />\n        </Box>\n    );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["_ref","open","onClose","text","titleText","severity","customIconMapping","success","_jsx","CheckCircleIcon","fontSize","error","ErrorIcon","info","InfoIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","children","_jsxs","Alert","iconMapping","AlertTitle","validationSchema","Yup","shape","username","required","email","password","min","max","confirmPassword","oneOf","StyledLink","styled","NavLink","textDecoration","color","marginLeft","borderBottom","borderColor","Register","setTitleText","useState","setText","setSeverity","showSnackBar","setShowSnackBar","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","user","useContext","Context","dispatch","useDispatch","navigate","useNavigate","formik","useFormik","initialValues","onSubmit","async","values","resetForm","response","createUserWithEmailAndPassword","auth","data","uid","name","registerUser","setTimeout","useEffect","Box","component","handleSubmit","sx","margin","display","flexDirection","alignContent","justifyContent","pl","pr","pt","pb","maxWidth","Typography","variant","fontWeight","TextField","type","value","autoComplete","onChange","handleChange","onBlur","handleBlur","touched","submitCount","Boolean","errors","helperText","InputProps","endAdornment","React","IconButton","onClick","VisibilityIcon","VisibilityOffIcon","Button","mt","mb","textAlign","to","CustomSnackbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}