{"version":3,"file":"static/js/315.7cac2bc7.chunk.js","mappings":"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","sources":["pages/Profile.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signOut } from \"firebase/auth\";\nimport {\n    Container,\n    Button,\n    Typography,\n    Paper,\n    Avatar,\n    Box,\n    List,\n    ListItem,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    CircularProgress,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport AdminPanelSettingsIcon from \"@mui/icons-material/AdminPanelSettings\";\nimport { Context } from \"../context/AuthContext\";\nimport { fetchUser, clearUser } from \"../redux/slice/userSlice\";\nimport { auth } from \"../firebaseConfig\";\n\nexport default function Profile() {\n    const { isAdmin, user } = useContext(Context);\n\n    const { customer, status } = useSelector((state) => state.customer);\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const handleSignOut = async () => {\n        try {\n            await signOut(auth);\n            dispatch(clearUser());\n            navigate(\"/login\");\n        } catch (error) {\n            throw new Error(error.message);\n        }\n    };\n\n    const handleUpdateProfile = async () => {};\n\n    useEffect(() => {\n        dispatch(fetchUser(user.email));\n    }, []);\n\n    if (status === \"loading\") {\n        return (\n            <Box sx={{ textAlign: \"center\", mt: 8 }}>\n                <CircularProgress color=\"secondary\" />\n            </Box>\n        );\n    }\n\n    if (status === \"failed\") {\n        return (\n            <Box sx={{ textAlign: \"center\", mt: 8 }}>\n                <Typography variant=\"h4\" sx={{ p: 1 }}>\n                    Користувача не знайдено.\n                </Typography>\n                <Button\n                    variant=\"outlined\"\n                    disableElevation\n                    type=\"button\"\n                    onClick={handleSignOut}\n                >\n                    На сторінку логіну\n                </Button>\n            </Box>\n        );\n    }\n\n    if (status === \"succeeded\" && customer)\n        return (\n            <Container\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    pl: 4,\n                    pr: 4,\n                    pt: 10,\n                    pb: 4,\n                }}\n            >\n                <Typography\n                    variant=\"h4\"\n                    sx={{ pt: 2, fontSize: { xs: 20, md: 30 } }}\n                >\n                    Профіль користувача\n                </Typography>\n                <Paper\n                    elevation={6}\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-between\",\n                        height: \"160px\",\n                        minWidth: \"320px\",\n                        borderRadius: \"10px\",\n                        overflow: \"hidden\",\n                        mt: 2,\n                        mb: 2,\n                        p: 2,\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            gap: 3,\n                        }}\n                    >\n                        <Avatar sx={{ width: 83, height: 83 }}>\n                            {customer.name.charAt(0)}\n                        </Avatar>\n                        <Box>\n                            <Typography variant=\"h6\">\n                                {customer.name}\n                            </Typography>\n                            <Typography variant=\"h7\">\n                                {customer.email}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <Button\n                        variant=\"outlined\"\n                        disableElevation\n                        onClick={handleUpdateProfile}\n                        type=\"button\"\n                    >\n                        Редагувати профіль\n                    </Button>\n                </Paper>\n                <List sx={{ minWidth: \"320px\", pt: 2 }}>\n                    {isAdmin && (\n                        <ListItem disablePadding>\n                            <ListItemButton\n                                divider\n                                disableGutters\n                                onClick={() => navigate(\"/admin\")}\n                            >\n                                <ListItemIcon>\n                                    <AdminPanelSettingsIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Панель Адміністратора\" />\n                            </ListItemButton>\n                        </ListItem>\n                    )}\n                    <ListItem disablePadding>\n                        <ListItemButton divider disableGutters>\n                            <ListItemIcon>\n                                <ChatIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Чат (в розробці)\" />\n                        </ListItemButton>\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemButton\n                            divider\n                            disableGutters\n                            onClick={handleSignOut}\n                        >\n                            <ListItemIcon>\n                                <LogoutIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Вийти\" />\n                        </ListItemButton>\n                    </ListItem>\n                </List>\n            </Container>\n        );\n}\n"],"names":["Profile","isAdmin","user","useContext","Context","customer","status","useSelector","state","navigate","useNavigate","dispatch","useDispatch","handleSignOut","async","signOut","auth","clearUser","error","Error","message","useEffect","fetchUser","email","_jsx","Box","sx","textAlign","mt","children","CircularProgress","color","_jsxs","Typography","variant","p","Button","disableElevation","type","onClick","Container","display","flexDirection","alignItems","pl","pr","pt","pb","fontSize","xs","md","Paper","elevation","justifyContent","height","minWidth","borderRadius","overflow","mb","gap","Avatar","width","name","charAt","List","ListItem","disablePadding","ListItemButton","divider","disableGutters","ListItemIcon","AdminPanelSettingsIcon","ListItemText","primary","ChatIcon","LogoutIcon"],"sourceRoot":""}