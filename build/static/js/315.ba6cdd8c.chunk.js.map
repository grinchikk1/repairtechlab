{"version":3,"file":"static/js/315.ba6cdd8c.chunk.js","mappings":"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","sources":["pages/Profile.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signOut } from \"firebase/auth\";\nimport {\n    Container,\n    Button,\n    Typography,\n    Paper,\n    Avatar,\n    Box,\n    List,\n    ListItem,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    CircularProgress,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport AdminPanelSettingsIcon from \"@mui/icons-material/AdminPanelSettings\";\nimport { Context } from \"../context/AuthContext\";\nimport { fetchUser, clearUser } from \"../redux/slice/userSlice\";\nimport { auth } from \"../firebaseConfig\";\n\nexport default function Profile() {\n    const { isAdmin, user } = useContext(Context);\n\n    const { customer, status } = useSelector((state) => state.customer);\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const handleSignOut = async () => {\n        try {\n            await signOut(auth);\n            dispatch(clearUser());\n            navigate(\"/login\");\n        } catch (error) {\n            throw new Error(error.message);\n        }\n    };\n\n    const handleUpdateProfile = async () => {};\n\n    useEffect(() => {\n        dispatch(fetchUser(user.email));\n    }, []);\n\n    if (status === \"loading\") {\n        return (\n            <Box sx={{ textAlign: \"center\", mt: 5 }}>\n                <CircularProgress color=\"secondary\" />\n            </Box>\n        );\n    }\n\n    if (status === \"failed\") {\n        return (\n            <Box sx={{ textAlign: \"center\", mt: 5 }}>\n                <Typography variant=\"h4\" sx={{ p: 1 }}>\n                    Користувача не знайдено.\n                </Typography>\n                <Button\n                    variant=\"outlined\"\n                    disableElevation\n                    type=\"button\"\n                    onClick={handleSignOut}\n                >\n                    На сторінку логіну\n                </Button>\n            </Box>\n        );\n    }\n\n    if (status === \"succeeded\" && customer)\n        return (\n            <Container\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    height: \"calc(100vh - 120px)\",\n                    pl: 4,\n                    pr: 4,\n                    pt: 6,\n                }}\n            >\n                <Typography variant=\"h4\" sx={{ pt: 2 }}>\n                    Профіль користувача\n                </Typography>\n                <Paper\n                    elevation={6}\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-between\",\n                        height: \"160px\",\n                        minWidth: \"320px\",\n                        borderRadius: \"10px\",\n                        overflow: \"hidden\",\n                        mt: 2,\n                        mb: 2,\n                        p: 2,\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            gap: 3,\n                        }}\n                    >\n                        <Avatar sx={{ width: 83, height: 83 }}>\n                            {customer.name.charAt(0)}\n                        </Avatar>\n                        <Box>\n                            <Typography variant=\"h6\">\n                                {customer.name}\n                            </Typography>\n                            <Typography variant=\"h7\">\n                                {customer.email}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <Button\n                        variant=\"outlined\"\n                        disableElevation\n                        onClick={handleUpdateProfile}\n                        type=\"button\"\n                    >\n                        Редагувати профіль\n                    </Button>\n                </Paper>\n                <List sx={{ minWidth: \"320px\", pt: 2 }}>\n                    {isAdmin && (\n                        <ListItem disablePadding>\n                            <ListItemButton\n                                divider\n                                disableGutters\n                                onClick={() => navigate(\"/admin\")}\n                            >\n                                <ListItemIcon>\n                                    <AdminPanelSettingsIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Панель Адміністратора\" />\n                            </ListItemButton>\n                        </ListItem>\n                    )}\n                    <ListItem disablePadding>\n                        <ListItemButton divider disableGutters>\n                            <ListItemIcon>\n                                <ChatIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Чат (в розробці)\" />\n                        </ListItemButton>\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemButton\n                            divider\n                            disableGutters\n                            onClick={handleSignOut}\n                        >\n                            <ListItemIcon>\n                                <LogoutIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Вийти\" />\n                        </ListItemButton>\n                    </ListItem>\n                </List>\n            </Container>\n        );\n}\n"],"names":["Profile","isAdmin","user","useContext","Context","customer","status","useSelector","state","navigate","useNavigate","dispatch","useDispatch","handleSignOut","async","signOut","auth","clearUser","error","Error","message","useEffect","fetchUser","email","_jsx","Box","sx","textAlign","mt","children","CircularProgress","color","_jsxs","Typography","variant","p","Button","disableElevation","type","onClick","Container","display","flexDirection","alignItems","height","pl","pr","pt","Paper","elevation","justifyContent","minWidth","borderRadius","overflow","mb","gap","Avatar","width","name","charAt","List","ListItem","disablePadding","ListItemButton","divider","disableGutters","ListItemIcon","AdminPanelSettingsIcon","ListItemText","primary","ChatIcon","LogoutIcon"],"sourceRoot":""}