{"version":3,"file":"static/js/260.1d4d30fd.chunk.js","mappings":"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","sources":["api/sendEmail.js","pages/Admin.jsx"],"sourcesContent":["const sendEmail = async () => {\n    try {\n        const response = await fetch(\"/send-email\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                to: \"repairtechlab@gmail.com\",\n                subject: \"Sending with SendGrid is Fun\",\n                text: \"and easy to do anywhere, even with Node.js\",\n                html: \"<strong>and easy to do anywhere, even with Node.js</strong>\",\n            }),\n        });\n\n        if (response.ok) {\n            console.log(\"Email sent successfully\");\n        } else {\n            console.error(\"Error sending email\");\n        }\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n};\n\nexport default sendEmail;\n","import React, { useEffect } from \"react\";\nimport {\n    Box,\n    Container,\n    Typography,\n    IconButton,\n    CardContent,\n    Card,\n    AccordionDetails,\n    AccordionSummary,\n    Accordion,\n    CircularProgress,\n    Button,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getForm, deleteForm, updateForm } from \"../redux/slice/formSlice\";\nimport sendEmail from \"../api/sendEmail\";\n\nexport default function Admin() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const { form, status } = useSelector((state) => state.form);\n\n    const handleSendEmail = () => {\n        sendEmail();\n    };\n\n    useEffect(() => {\n        dispatch(getForm());\n    }, [dispatch]);\n\n    const handleDelete = async (id) => {\n        // eslint-disable-next-line no-alert\n        const confirmed = window.confirm(\n            \"Ви впевнені, що хочете видалити цей запис?\"\n        );\n        if (confirmed) {\n            dispatch(deleteForm(id));\n        }\n    };\n\n    const handleStatusChange = (id, data) => {\n        dispatch(updateForm({ id, data }));\n    };\n\n    if (status === \"loading\") {\n        return (\n            <Box sx={{ textAlign: \"center\", mt: 8 }}>\n                <CircularProgress color=\"secondary\" />\n            </Box>\n        );\n    }\n\n    if (status === \"failed\") {\n        return navigate(\"/profile\");\n    }\n\n    if (status === \"succeeded\" && form)\n        return (\n            <Container\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    p: 4,\n                }}\n            >\n                <Typography\n                    color=\"secondary\"\n                    variant=\"h1\"\n                    sx={{ pb: 4, pt: 4, fontSize: { xs: 20, md: 30 } }}\n                >\n                    Адміністративна сторінка\n                </Typography>\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        flexWrap: \"wrap\",\n                        gap: 2,\n                    }}\n                >\n                    {form && form.length > 0 ? (\n                        form.map((card) => (\n                            <Card\n                                key={card.id}\n                                variant=\"outlined\"\n                                sx={{ width: \"300px\" }}\n                            >\n                                <CardContent\n                                    sx={{\n                                        display: \"flex\",\n                                        position: \"relative\",\n                                        flexDirection: \"column\",\n                                        pt: 4,\n                                        gap: 2,\n                                    }}\n                                >\n                                    <Typography level=\"title-md\">\n                                        <b>Імʼя: </b> {card.data.name}\n                                    </Typography>\n                                    <Typography level=\"title-md\">\n                                        <b>Пошта: </b> {card.data.email}\n                                    </Typography>\n                                    <Typography level=\"title-md\">\n                                        <b>Телефон: </b> {card.data.phone}\n                                    </Typography>\n                                    <Accordion\n                                        elevation={0}\n                                        sx={{\n                                            \".MuiAccordionSummary-content.Mui-expanded\":\n                                                { margin: 0 },\n                                            \".MuiAccordionSummary-root.Mui-expanded\":\n                                                { minHeight: 0 },\n                                        }}\n                                    >\n                                        <AccordionSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"text-content\"\n                                            sx={{\n                                                p: 0,\n                                            }}\n                                        >\n                                            <Typography>\n                                                Повідомлення\n                                            </Typography>\n                                        </AccordionSummary>\n                                        <AccordionDetails>\n                                            <Typography>\n                                                {card.data.textField}\n                                            </Typography>\n                                        </AccordionDetails>\n                                    </Accordion>\n                                    <IconButton\n                                        onClick={() => handleDelete(card.id)}\n                                        disableRipple\n                                        sx={{\n                                            position: \"absolute\",\n                                            top: 0,\n                                            right: 0,\n                                            p: 1,\n                                            cursor: \"pointer\",\n                                        }}\n                                    >\n                                        <ClearIcon color=\"error\" />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"body1\"\n                                        color=\"primary\"\n                                        sx={{\n                                            position: \"absolute\",\n                                            fontSize: \"12px\",\n                                            p: 1.6,\n                                            left: 0,\n                                            top: 0,\n                                        }}\n                                    >\n                                        <i>\n                                            {new Date(\n                                                card.data.date\n                                            ).toLocaleString()}\n                                        </i>\n                                    </Typography>\n                                    <Box\n                                        sx={{\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                            position: \"absolute\",\n                                            top: 0,\n                                            left: 150,\n                                            p: 1,\n                                        }}\n                                    >\n                                        <Typography level=\"title-md\">\n                                            {!card.data.status\n                                                ? \"Відкрито\"\n                                                : \"Закрито\"}\n                                        </Typography>\n                                        <input\n                                            type=\"checkbox\"\n                                            id={`orderStatus${card.id}`}\n                                            checked={card.data.status}\n                                            onChange={() =>\n                                                handleStatusChange(card.id, {\n                                                    ...card.data,\n                                                    status: !card.data.status,\n                                                })\n                                            }\n                                        />\n                                    </Box>\n                                </CardContent>\n                            </Card>\n                        ))\n                    ) : (\n                        <Typography variant=\"h6\">\n                            Данних не знайдено.\n                        </Typography>\n                    )}\n                </Box>\n                <Button onClick={handleSendEmail} sx={{ p: 1, m: 2 }}>\n                    Send Email\n                </Button>\n            </Container>\n        );\n}\n"],"names":["async","fetch","method","headers","body","JSON","stringify","to","subject","text","html","ok","console","log","error","Admin","dispatch","useDispatch","navigate","useNavigate","form","status","useSelector","state","useEffect","getForm","_jsx","Box","sx","textAlign","mt","children","CircularProgress","color","_jsxs","Container","display","flexDirection","alignItems","p","Typography","variant","pb","pt","fontSize","xs","md","justifyContent","flexWrap","gap","length","map","card","Card","width","CardContent","position","level","data","name","email","phone","Accordion","elevation","margin","minHeight","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","textField","IconButton","onClick","window","confirm","deleteForm","id","handleDelete","disableRipple","top","right","cursor","ClearIcon","left","Date","date","toLocaleString","type","concat","checked","onChange","handleStatusChange","updateForm","Button","handleSendEmail","sendEmail","m"],"sourceRoot":""}