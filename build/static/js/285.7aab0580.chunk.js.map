{"version":3,"file":"static/js/285.7aab0580.chunk.js","mappings":"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","sources":["components/ButtonOutline.jsx","components/CustomSnackBar.jsx","pages/Register.jsx","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\n\nexport default function ButtonOutline({\n    onClick,\n    text,\n    color = \"#000\",\n    type = \"button\",\n}) {\n    return (\n        <Button\n            disableElevation\n            variant=\"outlined\"\n            type={type}\n            onClick={onClick}\n            sx={{ color }}\n        >\n            <motion.div\n                whileHover={{ scale: 1.2 }}\n                whileTap={{ scale: 0.8 }}\n                transition={{\n                    type: \"spring\",\n                    stiffness: 400,\n                    damping: 20,\n                }}\n            >\n                {text}\n            </motion.div>\n        </Button>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Snackbar, Alert, AlertTitle } from \"@mui/material\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nfunction CustomSnackbar({ open, onClose, text, titleText, severity }) {\n    const customIconMapping = {\n        success: <CheckCircleIcon fontSize=\"inherit\" />,\n        error: <ErrorIcon fontSize=\"inherit\" />,\n        info: <InfoIcon fontSize=\"inherit\" />,\n    };\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            open={open}\n            autoHideDuration={3000}\n            onClose={onClose}\n        >\n            <Alert\n                onClose={onClose}\n                severity={severity}\n                iconMapping={customIconMapping}\n            >\n                <AlertTitle>{titleText}</AlertTitle>\n                {text}\n            </Alert>\n        </Snackbar>\n    );\n}\n\nCustomSnackbar.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    text: PropTypes.string.isRequired,\n    titleText: PropTypes.string.isRequired,\n    severity: PropTypes.string.isRequired,\n};\n\nexport default CustomSnackbar;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, NavLink } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { Box, Typography, TextField, IconButton, styled } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport { Context } from \"../context/AuthContext\";\nimport { auth } from \"../firebaseConfig\";\nimport CustomSnackbar from \"../components/CustomSnackBar\";\nimport { registerUser } from \"../redux/slice/userSlice\";\nimport ButtonOutline from \"../components/ButtonOutline\";\n\nconst validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"Поле обовʼязкове\"),\n    email: Yup.string()\n        .email(\"Не вірний формат пошти\")\n        .required(\"Поле обовʼязкове\"),\n    phone: Yup.string()\n        .matches(/^\\+?3?8?(0\\d{9})$/, \"Не вірний формат телефону\")\n        .required(\"Поле обовʼязкове\"),\n    password: Yup.string()\n        .min(7, \"Пароль має містити від 7 до 30 символів\")\n        .max(30, \"Пароль має містити від 7 до 30 символів\")\n        .required(\"Поле обовʼязкове\"),\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref(\"password\"), null], \"Паролі не співпадають\")\n        .required(\"Поле обов'язкове\"),\n});\n\nconst StyledLink = styled(NavLink)({\n    textDecoration: \"none\",\n    color: \"rgb(41, 98, 255)\",\n    marginLeft: \"10px\",\n    borderBottom: \"1px solid rgba(41, 98, 255, 0.2)\",\n    \"&:hover\": {\n        borderColor: \"rgb(41, 98, 255)\",\n    },\n    \"&.active\": {\n        borderColor: \"rgb(41, 98, 255)\",\n    },\n});\n\nexport default function Register() {\n    const [titleText, setTitleText] = useState(\"\");\n    const [text, setText] = useState(\"\");\n    const [severity, setSeverity] = useState(\"success\");\n\n    const [showSnackBar, setShowSnackBar] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n    const { user } = useContext(Context);\n    const dispatch = useDispatch();\n\n    const navigate = useNavigate();\n\n    const formik = useFormik({\n        initialValues: {\n            username: \"\",\n            email: \"\",\n            phone: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        },\n        validationSchema,\n        onSubmit: async (values, { resetForm }) => {\n            try {\n                const response = await createUserWithEmailAndPassword(\n                    auth,\n                    values.email,\n                    values.password\n                );\n\n                const data = {\n                    email: response.user.email,\n                    uid: response.user.uid,\n                    name: values.username,\n                    phone: values.phone,\n                };\n\n                dispatch(registerUser(data));\n\n                setTitleText(\"Вітаємо\");\n                setText(\"Успішна реєстрація\");\n                setSeverity(\"success\");\n                setShowSnackBar(true);\n\n                setTimeout(() => {\n                    navigate(\"/\");\n                }, 2000);\n            } catch (error) {\n                setTitleText(\"Помилка\");\n                setText(\"Ім'я користувача, пошта або пароль не вірний\");\n                setSeverity(\"error\");\n                setShowSnackBar(true);\n            }\n\n            resetForm();\n        },\n    });\n\n    useEffect(() => {\n        if (user) {\n            navigate(\"/profile\");\n        }\n    }, []);\n\n    return (\n        <Box\n            component=\"form\"\n            onSubmit={formik.handleSubmit}\n            sx={{\n                margin: \"0 auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignContent: \"center\",\n                justifyContent: \"space-evenly\",\n                p: 4,\n                maxWidth: \"480px\",\n            }}\n        >\n            <Typography variant=\"h4\" color=\"secondary\" fontWeight=\"bold\">\n                Реєстрація\n            </Typography>\n            <Typography variant=\"h6\" color=\"primary\" sx={{ pt: 3, pb: 1 }}>\n                Вкажіть Імʼя\n            </Typography>\n            <TextField\n                type=\"text\"\n                variant=\"outlined\"\n                name=\"username\"\n                value={formik.values.username}\n                autoComplete=\"given-name\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                    (formik.touched.username || formik.submitCount > 0) &&\n                    Boolean(formik.errors.username)\n                }\n                helperText={\n                    formik.touched.username || formik.submitCount > 0\n                        ? formik.errors.username || \"\\u200b\"\n                        : \" \"\n                }\n            />\n            <Typography variant=\"h6\" color=\"primary\" sx={{ pt: 3, pb: 1 }}>\n                Вкажіть Пошту\n            </Typography>\n            <TextField\n                type=\"email\"\n                variant=\"outlined\"\n                name=\"email\"\n                value={formik.values.email}\n                autoComplete=\"email\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                    (formik.touched.email || formik.submitCount > 0) &&\n                    Boolean(formik.errors.email)\n                }\n                helperText={\n                    formik.touched.email || formik.submitCount > 0\n                        ? formik.errors.email || \"\\u200b\"\n                        : \" \"\n                }\n            />\n            <Typography variant=\"h6\" color=\"primary\" sx={{ pt: 3, pb: 1 }}>\n                Вкажіть Номер Телефону\n            </Typography>\n            <TextField\n                type=\"tel\"\n                variant=\"outlined\"\n                name=\"phone\"\n                value={formik.values.phone}\n                autoComplete=\"phone\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                    (formik.touched.phone || formik.submitCount > 0) &&\n                    Boolean(formik.errors.phone)\n                }\n                helperText={\n                    formik.touched.phone || formik.submitCount > 0\n                        ? formik.errors.phone || \"\\u200b\"\n                        : \" \"\n                }\n            />\n            <Typography variant=\"h6\" color=\"primary\" sx={{ pt: 3, pb: 1 }}>\n                Придумайте пароль\n            </Typography>\n            <TextField\n                type={showPassword ? \"text\" : \"password\"}\n                variant=\"outlined\"\n                name=\"password\"\n                value={formik.values.password}\n                autoComplete=\"current-password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                    (formik.touched.password || formik.submitCount > 0) &&\n                    Boolean(formik.errors.password)\n                }\n                helperText={\n                    formik.touched.password || formik.submitCount > 0\n                        ? formik.errors.password || \"\\u200b\"\n                        : \" \"\n                }\n                InputProps={{\n                    endAdornment: React.cloneElement(\n                        <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={() => setShowPassword(!showPassword)}\n                        >\n                            {showPassword ? (\n                                <VisibilityIcon color=\"secondary\" />\n                            ) : (\n                                <VisibilityOffIcon color=\"secondary\" />\n                            )}\n                        </IconButton>\n                    ),\n                }}\n            />\n            <Typography variant=\"h6\" color=\"primary\" sx={{ pt: 3, pb: 1 }}>\n                Підтвердіть пароль\n            </Typography>\n            <TextField\n                sx={{ mb: 4 }}\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                variant=\"outlined\"\n                name=\"confirmPassword\"\n                value={formik.values.confirmPassword}\n                autoComplete=\"new-password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                    (formik.touched.confirmPassword ||\n                        formik.submitCount > 0) &&\n                    Boolean(formik.errors.confirmPassword)\n                }\n                helperText={\n                    formik.touched.confirmPassword || formik.submitCount > 0\n                        ? formik.errors.confirmPassword || \"\\u200b\"\n                        : \" \"\n                }\n                InputProps={{\n                    endAdornment: React.cloneElement(\n                        <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={() =>\n                                setShowConfirmPassword(!showConfirmPassword)\n                            }\n                        >\n                            {showConfirmPassword ? (\n                                <VisibilityIcon color=\"secondary\" />\n                            ) : (\n                                <VisibilityOffIcon color=\"secondary\" />\n                            )}\n                        </IconButton>\n                    ),\n                }}\n            />\n            <ButtonOutline text=\"Зареєструватися\" type=\"submit\" />\n            <Typography\n                variant=\"body1\"\n                fontSize={20}\n                sx={{ textAlign: \"center\", mt: 4 }}\n            >\n                Вже маєте акаунт? <StyledLink to=\"/login\">Увійти</StyledLink>\n            </Typography>\n            <CustomSnackbar\n                open={showSnackBar}\n                onClose={() => setShowSnackBar(false)}\n                titleText={titleText}\n                text={text}\n                severity={severity}\n            />\n        </Box>\n    );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["ButtonOutline","_ref","onClick","text","color","type","_jsx","Button","disableElevation","variant","sx","children","motion","div","whileHover","scale","whileTap","transition","stiffness","damping","open","onClose","titleText","severity","customIconMapping","success","CheckCircleIcon","fontSize","error","ErrorIcon","info","InfoIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","_jsxs","Alert","iconMapping","AlertTitle","validationSchema","Yup","shape","username","required","email","phone","matches","password","min","max","confirmPassword","oneOf","StyledLink","styled","NavLink","textDecoration","marginLeft","borderBottom","borderColor","Register","setTitleText","useState","setText","setSeverity","showSnackBar","setShowSnackBar","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","user","useContext","Context","dispatch","useDispatch","navigate","useNavigate","formik","useFormik","initialValues","onSubmit","async","values","resetForm","response","createUserWithEmailAndPassword","auth","data","uid","name","registerUser","setTimeout","useEffect","Box","component","handleSubmit","margin","display","flexDirection","alignContent","justifyContent","p","maxWidth","Typography","fontWeight","pt","pb","TextField","value","autoComplete","onChange","handleChange","onBlur","handleBlur","touched","submitCount","Boolean","errors","helperText","InputProps","endAdornment","React","IconButton","VisibilityIcon","VisibilityOffIcon","mb","textAlign","mt","to","CustomSnackbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}