{"version":3,"file":"static/js/315.e6e44cd8.chunk.js","mappings":"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","sources":["components/ButtonOutline.jsx","pages/Profile.jsx"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\n\nexport default function ButtonOutline({\n    onClick,\n    text,\n    color = \"#000\",\n    type = \"button\",\n}) {\n    return (\n        <Button\n            disableElevation\n            variant=\"outlined\"\n            type={type}\n            onClick={onClick}\n            sx={{ color }}\n        >\n            <motion.div\n                whileHover={{ scale: 1.2 }}\n                whileTap={{ scale: 0.8 }}\n                transition={{\n                    type: \"spring\",\n                    stiffness: 400,\n                    damping: 20,\n                }}\n            >\n                {text}\n            </motion.div>\n        </Button>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signOut } from \"firebase/auth\";\nimport {\n    Container,\n    Typography,\n    Paper,\n    Avatar,\n    Box,\n    List,\n    ListItem,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    CircularProgress,\n} from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport AdminPanelSettingsIcon from \"@mui/icons-material/AdminPanelSettings\";\nimport { Context } from \"../context/AuthContext\";\nimport { fetchUser, clearUser } from \"../redux/slice/userSlice\";\nimport { auth } from \"../firebaseConfig\";\nimport ButtonOutline from \"../components/ButtonOutline\";\n\nexport default function Profile() {\n    const { isAdmin, user } = useContext(Context);\n\n    const { customer, status } = useSelector((state) => state.customer);\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const handleSignOut = async () => {\n        try {\n            await signOut(auth);\n            dispatch(clearUser());\n            navigate(\"/login\");\n        } catch (error) {\n            throw new Error(error.message);\n        }\n    };\n\n    const handleUpdateProfile = async () => {};\n\n    useEffect(() => {\n        dispatch(fetchUser(user.email));\n    }, []);\n\n    if (status === \"loading\") {\n        return (\n            <Box sx={{ textAlign: \"center\", mt: 8 }}>\n                <CircularProgress color=\"secondary\" />\n            </Box>\n        );\n    }\n\n    if (status === \"failed\") {\n        return (\n            <Box sx={{ textAlign: \"center\", mt: 8 }}>\n                <Typography variant=\"h4\" sx={{ p: 1 }}>\n                    Користувача не знайдено.\n                </Typography>\n                <ButtonOutline\n                    text=\"На сторінку логіну\"\n                    onClick={handleSignOut}\n                />\n            </Box>\n        );\n    }\n\n    if (status === \"succeeded\" && customer)\n        return (\n            <Container\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    pl: 4,\n                    pr: 4,\n                    pt: 10,\n                    pb: 4,\n                }}\n            >\n                <Typography\n                    variant=\"h4\"\n                    sx={{ pt: 2, fontSize: { xs: 20, md: 30 } }}\n                >\n                    Профіль користувача\n                </Typography>\n                <Paper\n                    elevation={6}\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-between\",\n                        height: \"160px\",\n                        minWidth: \"320px\",\n                        borderRadius: \"10px\",\n                        overflow: \"hidden\",\n                        mt: 2,\n                        mb: 2,\n                        p: 2,\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            gap: 3,\n                        }}\n                    >\n                        <Avatar sx={{ width: 83, height: 83 }}>\n                            {customer.name.charAt(0)}\n                        </Avatar>\n                        <Box>\n                            <Typography variant=\"h6\">\n                                {customer.name}\n                            </Typography>\n                            <Typography variant=\"h7\">\n                                {customer.email}\n                            </Typography>\n                        </Box>\n                    </Box>\n                    <ButtonOutline\n                        onClick={handleUpdateProfile}\n                        text=\"Редагувати профіль\"\n                    />\n                </Paper>\n                <List sx={{ minWidth: \"320px\", pt: 2 }}>\n                    {isAdmin && (\n                        <ListItem disablePadding>\n                            <ListItemButton\n                                divider\n                                disableGutters\n                                onClick={() => navigate(\"/admin\")}\n                            >\n                                <ListItemIcon>\n                                    <AdminPanelSettingsIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Панель Адміністратора\" />\n                            </ListItemButton>\n                        </ListItem>\n                    )}\n                    <ListItem disablePadding>\n                        <ListItemButton divider disableGutters>\n                            <ListItemIcon>\n                                <ChatIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Чат (в розробці)\" />\n                        </ListItemButton>\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemButton\n                            divider\n                            disableGutters\n                            onClick={handleSignOut}\n                        >\n                            <ListItemIcon>\n                                <LogoutIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Вийти\" />\n                        </ListItemButton>\n                    </ListItem>\n                </List>\n            </Container>\n        );\n}\n"],"names":["ButtonOutline","_ref","onClick","text","color","type","_jsx","Button","disableElevation","variant","sx","children","motion","div","whileHover","scale","whileTap","transition","stiffness","damping","Profile","isAdmin","user","useContext","Context","customer","status","useSelector","state","navigate","useNavigate","dispatch","useDispatch","handleSignOut","async","signOut","auth","clearUser","error","Error","message","useEffect","fetchUser","email","Box","textAlign","mt","CircularProgress","_jsxs","Typography","p","Container","display","flexDirection","alignItems","pl","pr","pt","pb","fontSize","xs","md","Paper","elevation","justifyContent","height","minWidth","borderRadius","overflow","mb","gap","Avatar","width","name","charAt","List","ListItem","disablePadding","ListItemButton","divider","disableGutters","ListItemIcon","AdminPanelSettingsIcon","ListItemText","primary","ChatIcon","LogoutIcon"],"sourceRoot":""}